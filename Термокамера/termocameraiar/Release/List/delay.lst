##############################################################################
#                                                                            #
# IAR Atmel AVR C/EC++ Compiler V3.20C/W32             04/Aug/2006  13:21:51 #
# Copyright 1996-2004 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  D:\temp\sys_msap01mk_dev0103\OneWire\delay.c            #
#    Command line =  --cpu=m128 -ms -o D:\temp\sys_msap01mk_dev0103\Release\ #
#                    Obj\ -lCN D:\temp\sys_msap01mk_dev0103\Release\List\    #
#                    -y --initializers_in_flash -s9                          #
#                    -DENABLE_BIT_DEFINITIONS -e -I "F:\Program Files\IAR    #
#                    Systems\Embedded Workbench 3.2\avr\INC\" -I             #
#                    "F:\Program Files\IAR Systems\Embedded Workbench        #
#                    3.2\avr\INC\CLIB\" --eeprom_size 4096                   #
#                    D:\temp\sys_msap01mk_dev0103\OneWire\delay.c            #
#    List file    =  D:\temp\sys_msap01mk_dev0103\Release\List\delay.lst     #
#    Object file  =  D:\temp\sys_msap01mk_dev0103\Release\Obj\delay.r90      #
#                                                                            #
#                                                                            #
##############################################################################

D:\temp\sys_msap01mk_dev0103\OneWire\delay.c
      1          #include "iom128.h"
      2          #include <inavr.h>
      3          #include <ina90.h>
      4          
      5          #include "1wire.h"
      6          
      7          //#include "led.h"
      8          //#include "../led.h"
      9          #include "../types.h"
     10          #include "../base.h"
     11          unsigned char flag=0;
     12          //unsigned char flag0;
     13          
     14          /****************************************************
     15          Максимальная задержка определяется разрядностью
     16          таймера и частотой его работы, при fc = 12 МГц
     17          5457 мкс
     18          Максимальное время на обработку функции 172 такта
     19          ****************************************************/

   \                                 In segment CODE, align 2, keep-with-next
     20          void delay_(unsigned long t)
   \                     delay_:
     21          {
     22          
     23            __disable_interrupt();
   \   00000000   94F8                       CLI
     24            if (t < 0x10000)
   \   00000002   ....                       LDI     R30,LOW(count)
   \   00000004   ....                       LDI     R31,(count) >> 8
   \   00000006   3000                       CPI     R16,0
   \   00000008   E040                       LDI     R20,0
   \   0000000A   0714                       CPC     R17,R20
   \   0000000C   E041                       LDI     R20,1
   \   0000000E   0724                       CPC     R18,R20
   \   00000010   E040                       LDI     R20,0
   \   00000012   0734                       CPC     R19,R20
   \   00000014   F458                       BRCC    ??delay__0
     25              {
     26                TIMSK |= (1<<OCIE1A);
   \   00000016   B747                       IN      R20,0x37
   \   00000018   6140                       ORI     R20,0x10
   \   0000001A   BF47                       OUT     0x37,R20
     27                TCCR1B = (1<<CS10);// /1
   \   0000001C   E041                       LDI     R20,1
   \   0000001E   BD4E                       OUT     0x2E,R20
     28                TCNT1 = 0;
   \   00000020   E040                       LDI     R20,0
   \   00000022   BD4D                       OUT     0x2D,R20
   \   00000024   BD4C                       OUT     0x2C,R20
     29                
     30                OCR1A = (unsigned int) (t - 68);
   \   00000026   5404                       SUBI    R16,68
   \                     ??delay__1:
   \   00000028   4010                       SBCI    R17,0
   \   0000002A   C052                       RJMP    ??delay__2
     31                flag = 1;
     32                TIFR = (1<<OCF1A);
     33                __enable_interrupt();
     34              }
     35            else if (t < 0x80000)
   \                     ??delay__0:
   \   0000002C   3000                       CPI     R16,0
   \   0000002E   0714                       CPC     R17,R20
   \   00000030   E048                       LDI     R20,8
   \   00000032   0724                       CPC     R18,R20
   \   00000034   E040                       LDI     R20,0
   \   00000036   0734                       CPC     R19,R20
   \   00000038   F4B0                       BRCC    ??delay__3
     36              {
     37                TIMSK |= (1<<OCIE1A);
   \   0000003A   B747                       IN      R20,0x37
   \   0000003C   6140                       ORI     R20,0x10
   \   0000003E   BF47                       OUT     0x37,R20
     38                TCCR1B = (1<<CS11);// /8
   \   00000040   E042                       LDI     R20,2
   \   00000042   BD4E                       OUT     0x2E,R20
     39                TCNT1 = 0;
   \   00000044   E040                       LDI     R20,0
   \   00000046   BD4D                       OUT     0x2D,R20
   \   00000048   BD4C                       OUT     0x2C,R20
     40                
     41                OCR1A = (unsigned int) ((t >> 3) - 20);
   \   0000004A   9536                       LSR     R19
   \   0000004C   9527                       ROR     R18
   \   0000004E   9517                       ROR     R17
   \   00000050   9507                       ROR     R16
   \   00000052   9536                       LSR     R19
   \   00000054   9527                       ROR     R18
   \   00000056   9517                       ROR     R17
   \   00000058   9507                       ROR     R16
   \   0000005A   9536                       LSR     R19
   \   0000005C   9527                       ROR     R18
   \   0000005E   9517                       ROR     R17
   \   00000060   9507                       ROR     R16
   \   00000062   5104                       SUBI    R16,20
   \   00000064   CFE1                       RJMP    ??delay__1
     42                flag = 1;
     43                TIFR = (1<<OCF1A);
     44                __enable_interrupt();
     45              }
     46            else if (t < 0x400000)
   \                     ??delay__3:
   \   00000066   3000                       CPI     R16,0
   \   00000068   0714                       CPC     R17,R20
   \   0000006A   E440                       LDI     R20,64
   \   0000006C   0724                       CPC     R18,R20
   \   0000006E   E040                       LDI     R20,0
   \   00000070   0734                       CPC     R19,R20
   \   00000072   F468                       BRCC    ??delay__4
     47              {
     48                TIMSK |= (1<<OCIE1A);
   \   00000074   B747                       IN      R20,0x37
   \   00000076   6140                       ORI     R20,0x10
   \   00000078   BF47                       OUT     0x37,R20
     49                TCCR1B = (1<<CS10) | (1<<CS11);// /64
   \   0000007A   E043                       LDI     R20,3
   \   0000007C   BD4E                       OUT     0x2E,R20
     50                TCNT1 = 0;
   \   0000007E   E040                       LDI     R20,0
   \   00000080   BD4D                       OUT     0x2D,R20
   \   00000082   BD4C                       OUT     0x2C,R20
     51                
     52                OCR1A = (unsigned int) ((t >> 6) - 2);
   \   00000084   E046                       LDI     R20,6
   \   00000086   ........                   CALL    ?UL_SHR_L03
   \   0000008A   5002                       SUBI    R16,2
   \   0000008C   CFCD                       RJMP    ??delay__1
     53                flag = 1;
     54                TIFR = (1<<OCF1A);
     55                __enable_interrupt();
     56              }
     57            else if (t < 0x1000000)
   \                     ??delay__4:
   \   0000008E   3031                       CPI     R19,1
   \   00000090   F460                       BRCC    ??delay__5
     58              {
     59                TIMSK |= (1<<OCIE1A);
   \   00000092   B747                       IN      R20,0x37
   \   00000094   6140                       ORI     R20,0x10
   \   00000096   BF47                       OUT     0x37,R20
     60                TCCR1B = (1<<CS12);// /256
   \   00000098   E044                       LDI     R20,4
   \   0000009A   BD4E                       OUT     0x2E,R20
     61                TCNT1 = 0;
   \   0000009C   E040                       LDI     R20,0
   \   0000009E   BD4D                       OUT     0x2D,R20
   \   000000A0   BD4C                       OUT     0x2C,R20
     62                
     63                OCR1A = (unsigned int) ((t >> 8) - 1);
   \   000000A2   2F01                       MOV     R16,R17
   \   000000A4   2F12                       MOV     R17,R18
   \   000000A6   5001                       SUBI    R16,1
   \   000000A8   CFBF                       RJMP    ??delay__1
     64                flag = 1;
     65                TIFR = (1<<OCF1A);
     66                __enable_interrupt();
     67              }
     68            else if (t < 0x4000000)
   \                     ??delay__5:
   \   000000AA   3034                       CPI     R19,4
   \   000000AC   F4C0                       BRCC    ??delay__6
     69              {
     70                TIMSK |= (1<<OCIE1A);
   \   000000AE   B747                       IN      R20,0x37
   \   000000B0   6140                       ORI     R20,0x10
   \   000000B2   BF47                       OUT     0x37,R20
     71                TCCR1B = (1<<CS10) | (1<<CS12);// /1024
   \   000000B4   E045                       LDI     R20,5
   \   000000B6   BD4E                       OUT     0x2E,R20
     72                TCNT1 = 0;
   \   000000B8   E040                       LDI     R20,0
   \   000000BA   BD4D                       OUT     0x2D,R20
   \   000000BC   BD4C                       OUT     0x2C,R20
     73                
     74                OCR1A = (unsigned int) ((t >> 10) - 0);
   \   000000BE   2F01                       MOV     R16,R17
   \   000000C0   2F12                       MOV     R17,R18
   \   000000C2   2F23                       MOV     R18,R19
   \   000000C4   9526                       LSR     R18
   \   000000C6   9517                       ROR     R17
   \   000000C8   9507                       ROR     R16
   \   000000CA   9526                       LSR     R18
   \   000000CC   9517                       ROR     R17
   \   000000CE   9507                       ROR     R16
   \                     ??delay__2:
   \   000000D0   BD1B                       OUT     0x2B,R17
   \   000000D2   BD0A                       OUT     0x2A,R16
     75                flag = 1;
   \   000000D4   E001                       LDI     R16,1
   \   000000D6   8302                       STD     Z+2,R16
     76                TIFR = (1<<OCF1A);
   \   000000D8   E100                       LDI     R16,16
   \   000000DA   BF06                       OUT     0x36,R16
     77                __enable_interrupt();
   \   000000DC   9478                       SEI
     78              }
     79              __enable_interrupt();  
   \                     ??delay__6:
   \   000000DE   9478                       SEI
     80            while (flag );//ждем завершения отведенного времени
   \                     ??delay__7:
   \   000000E0   8102                       LDD     R16,Z+2
   \   000000E2   2300                       TST     R16
   \   000000E4   F7E9                       BRNE    ??delay__7
     81          
     82          /*
     83          
     84            if (t < 0x10000)
     85              {
     86          //      TIMSK |= (1<<OCIE1A);
     87                TCCR1B = (1<<CS10);// /1
     88                TCNT1 = 0;
     89              
     90                OCR1A = (unsigned int) (t - 68);
     91          
     92          
     93              }
     94            else if (t < 0x80000)
     95              {
     96          
     97                TCCR1B = (1<<CS11);// /8
     98                TCNT1 = 0;
     99                
    100                OCR1A = (unsigned int) ((t >> 3) - 20);
    101              }
    102            else if (t < 0x400000)
    103              {
    104          
    105                TCCR1B = (1<<CS10) | (1<<CS11);// /64
    106                TCNT1 = 0;
    107                
    108                OCR1A = (unsigned int) ((t >> 6) - 2);
    109              }
    110            else if (t < 0x1000000)
    111              {
    112          
    113                TCCR1B = (1<<CS12);// /256
    114                TCNT1 = 0;
    115                
    116                OCR1A = (unsigned int) ((t >> 8) - 1);
    117              }
    118            else if (t < 0x4000000)
    119              {
    120          
    121                TCCR1B = (1<<CS10) | (1<<CS12);// /1024
    122                TCNT1 = 0;
    123                
    124                OCR1A = (unsigned int) ((t >> 10) - 0);
    125              }
    126            while (TCNT1<OCR1A);  //ждем завершения отведенного времени  
    127            line1_up;line2_up;line3_up;line4_up;
    128          */  
    129          }
   \   000000E6   9508                       RET
    130          

   \                                 In segment CODE, align 2, keep-with-next
    131          void delay__(unsigned long t)
   \                     delay__:
    132          {
    133          
    134            if (t < 0x10000)
   \   00000000   ....                       LDI     R30,LOW(count)
   \   00000002   ....                       LDI     R31,(count) >> 8
   \   00000004   3000                       CPI     R16,0
   \   00000006   E040                       LDI     R20,0
   \   00000008   0714                       CPC     R17,R20
   \   0000000A   E041                       LDI     R20,1
   \   0000000C   0724                       CPC     R18,R20
   \   0000000E   E040                       LDI     R20,0
   \   00000010   0734                       CPC     R19,R20
   \   00000012   F458                       BRCC    ??delay___0
    135              {
    136                  __disable_interrupt();
   \   00000014   94F8                       CLI
    137                TIMSK |= (1<<OCIE1A);
   \   00000016   B747                       IN      R20,0x37
   \   00000018   6140                       ORI     R20,0x10
   \   0000001A   BF47                       OUT     0x37,R20
    138                TCCR1B = (1<<CS10);// /1
   \   0000001C   E041                       LDI     R20,1
   \   0000001E   BD4E                       OUT     0x2E,R20
    139                TCNT1 = 0;
   \   00000020   E040                       LDI     R20,0
   \   00000022   BD4D                       OUT     0x2D,R20
   \   00000024   BD4C                       OUT     0x2C,R20
    140                
    141                OCR1A = (unsigned int) (t - 68);
   \   00000026   5404                       SUBI    R16,68
   \   00000028   C01D                       RJMP    ??delay___1
    142                flag = 1;
    143                TIFR = (1<<OCF1A);
    144                __enable_interrupt();
    145              }
    146            else if (t < 0x80000)
   \                     ??delay___0:
   \   0000002A   3000                       CPI     R16,0
   \   0000002C   0714                       CPC     R17,R20
   \   0000002E   E048                       LDI     R20,8
   \   00000030   0724                       CPC     R18,R20
   \   00000032   E040                       LDI     R20,0
   \   00000034   0734                       CPC     R19,R20
   \   00000036   F4F8                       BRCC    ??delay___2
    147              {
    148                  __disable_interrupt();
   \   00000038   94F8                       CLI
    149                TIMSK |= (1<<OCIE1A);
   \   0000003A   B747                       IN      R20,0x37
   \   0000003C   6140                       ORI     R20,0x10
   \   0000003E   BF47                       OUT     0x37,R20
    150                TCCR1B = (1<<CS11);// /8
   \   00000040   E042                       LDI     R20,2
   \   00000042   BD4E                       OUT     0x2E,R20
    151                TCNT1 = 0;
   \   00000044   E040                       LDI     R20,0
   \   00000046   BD4D                       OUT     0x2D,R20
   \   00000048   BD4C                       OUT     0x2C,R20
    152                
    153                OCR1A = (unsigned int) ((t >> 3) - 20);
   \   0000004A   9536                       LSR     R19
   \   0000004C   9527                       ROR     R18
   \   0000004E   9517                       ROR     R17
   \   00000050   9507                       ROR     R16
   \   00000052   9536                       LSR     R19
   \   00000054   9527                       ROR     R18
   \   00000056   9517                       ROR     R17
   \   00000058   9507                       ROR     R16
   \   0000005A   9536                       LSR     R19
   \   0000005C   9527                       ROR     R18
   \   0000005E   9517                       ROR     R17
   \   00000060   9507                       ROR     R16
   \   00000062   5104                       SUBI    R16,20
   \                     ??delay___1:
   \   00000064   4010                       SBCI    R17,0
   \   00000066   BD1B                       OUT     0x2B,R17
   \   00000068   BD0A                       OUT     0x2A,R16
    154                flag = 1;
   \   0000006A   E001                       LDI     R16,1
   \   0000006C   8302                       STD     Z+2,R16
    155                TIFR = (1<<OCF1A);
   \   0000006E   E100                       LDI     R16,16
   \   00000070   BF06                       OUT     0x36,R16
    156                __enable_interrupt();
   \   00000072   9478                       SEI
   \   00000074   9508                       RET
    157              }
    158            else if (t < 0x400000)
   \                     ??delay___2:
   \   00000076   3000                       CPI     R16,0
   \   00000078   0714                       CPC     R17,R20
   \   0000007A   E440                       LDI     R20,64
   \   0000007C   0724                       CPC     R18,R20
   \   0000007E   E040                       LDI     R20,0
   \   00000080   0734                       CPC     R19,R20
   \   00000082   F470                       BRCC    ??delay___3
    159              {
    160                __disable_interrupt();
   \   00000084   94F8                       CLI
    161                TIMSK |= (1<<OCIE1A);
   \   00000086   B747                       IN      R20,0x37
   \   00000088   6140                       ORI     R20,0x10
   \   0000008A   BF47                       OUT     0x37,R20
    162                TCCR1B = (1<<CS10) | (1<<CS11);// /64
   \   0000008C   E043                       LDI     R20,3
   \   0000008E   BD4E                       OUT     0x2E,R20
    163                TCNT1 = 0;
   \   00000090   E040                       LDI     R20,0
   \   00000092   BD4D                       OUT     0x2D,R20
   \   00000094   BD4C                       OUT     0x2C,R20
    164                
    165                OCR1A = (unsigned int) ((t >> 6) - 2);
   \   00000096   E046                       LDI     R20,6
   \   00000098   ........                   CALL    ?UL_SHR_L03
   \   0000009C   5002                       SUBI    R16,2
   \   0000009E   CFE2                       RJMP    ??delay___1
    166                flag = 1;
    167                TIFR = (1<<OCF1A);
    168                __enable_interrupt();
    169              }
    170            else if (t < 0x1000000)
   \                     ??delay___3:
   \   000000A0   3031                       CPI     R19,1
   \   000000A2   F468                       BRCC    ??delay___4
    171              {
    172                  __disable_interrupt();
   \   000000A4   94F8                       CLI
    173                TIMSK |= (1<<OCIE1A);
   \   000000A6   B747                       IN      R20,0x37
   \   000000A8   6140                       ORI     R20,0x10
   \   000000AA   BF47                       OUT     0x37,R20
    174                TCCR1B = (1<<CS12);// /256
   \   000000AC   E044                       LDI     R20,4
   \   000000AE   BD4E                       OUT     0x2E,R20
    175                TCNT1 = 0;
   \   000000B0   E040                       LDI     R20,0
   \   000000B2   BD4D                       OUT     0x2D,R20
   \   000000B4   BD4C                       OUT     0x2C,R20
    176                
    177                OCR1A = (unsigned int) ((t >> 8) - 1);
   \   000000B6   2F01                       MOV     R16,R17
   \   000000B8   2F12                       MOV     R17,R18
   \   000000BA   5001                       SUBI    R16,1
   \   000000BC   CFD3                       RJMP    ??delay___1
    178                flag = 1;
    179                TIFR = (1<<OCF1A);
    180                __enable_interrupt();
    181              }
    182            else if (t < 0x4000000)
   \                     ??delay___4:
   \   000000BE   3034                       CPI     R19,4
   \   000000C0   F4C8                       BRCC    ??delay___5
    183              {
    184                  __disable_interrupt();
   \   000000C2   94F8                       CLI
    185                TIMSK |= (1<<OCIE1A);
   \   000000C4   B747                       IN      R20,0x37
   \   000000C6   6140                       ORI     R20,0x10
   \   000000C8   BF47                       OUT     0x37,R20
    186                TCCR1B = (1<<CS10) | (1<<CS12);// /1024
   \   000000CA   E045                       LDI     R20,5
   \   000000CC   BD4E                       OUT     0x2E,R20
    187                TCNT1 = 0;
   \   000000CE   E040                       LDI     R20,0
   \   000000D0   BD4D                       OUT     0x2D,R20
   \   000000D2   BD4C                       OUT     0x2C,R20
    188                
    189                OCR1A = (unsigned int) ((t >> 10) - 0);
   \   000000D4   2F01                       MOV     R16,R17
   \   000000D6   2F12                       MOV     R17,R18
   \   000000D8   2F23                       MOV     R18,R19
   \   000000DA   9526                       LSR     R18
   \   000000DC   9517                       ROR     R17
   \   000000DE   9507                       ROR     R16
   \   000000E0   9526                       LSR     R18
   \   000000E2   9517                       ROR     R17
   \   000000E4   9507                       ROR     R16
   \   000000E6   BD1B                       OUT     0x2B,R17
   \   000000E8   BD0A                       OUT     0x2A,R16
    190                flag = 1;
   \   000000EA   E001                       LDI     R16,1
   \   000000EC   8302                       STD     Z+2,R16
    191                TIFR = (1<<OCF1A);
   \   000000EE   E100                       LDI     R16,16
   \   000000F0   BF06                       OUT     0x36,R16
    192                __enable_interrupt();
   \   000000F2   9478                       SEI
    193              }
    194            //while (flag );//ждем завершения отведенного времени
    195          }
   \                     ??delay___5:
   \   000000F4   9508                       RET

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
    196          #define chperiod 100
    197          UINT count;
   \                     count:
   \   00000000                              DS 2
   \                     flag:
   \   00000002                              DS 1
    198          extern unsigned char f_presence;
    199          #pragma vector=TIMER1_COMPA_vect

   \                                 In segment CODE, align 2, keep-with-next
    200          __interrupt void T1_comp(void)
   \                     T1_comp:
    201          {
   \   00000000   93FA                       ST      -Y,R31
   \   00000002   93EA                       ST      -Y,R30
   \   00000004   933A                       ST      -Y,R19
   \   00000006   932A                       ST      -Y,R18
   \   00000008   931A                       ST      -Y,R17
   \   0000000A   930A                       ST      -Y,R16
   \   0000000C   B73F                       IN      R19,0x3F
    202          
    203            if (flag==1) 
   \   0000000E   9100....                   LDS     R16,(count + 2)
   \   00000012   3001                       CPI     R16,1
   \   00000014   F409                       BRNE    $+2+2
   \   00000016   C062                       RJMP    ??T1_comp_0
    204              {
    205                line1_up; line2_up; line3_up; line4_up;
    206                flag = 0;
    207                return;
    208              }
    209          /*    
    210            if (flag==2) 
    211              {ch1_down =0;ch2_down =0;ch3_down =0;ch4_down =0;
    212          //      pwr1_on;pwr2_on;      pwr3_on;pwr4_on;
    213                if (!(ramb[0x18] & 0x01)) ch1_up =0;
    214                if (!(ramb[0x18] & 0x02)) {ch2_up =0;}
    215                if (!(ramb[0x18] & 0x04)) {ch3_up =0;}
    216                if (!(ramb[0x18] & 0x08)) ch4_up =0;
    217              
    218                flag = 0;
    219          
    220                return;
    221              }
    222          */    
    223            if (flag==2){ 
   \   00000018   3002                       CPI     R16,2
   \   0000001A   F009                       BREQ    $+2+2
   \   0000001C   C049                       RJMP    ??T1_comp_1
    224               ch1_down =0;ch2_down =0;ch3_down =0;ch4_down =0;
   \   0000001E   91000065                   LDS     R16,101
   \   00000022   7F0B                       ANDI    R16,0xFB
   \   00000024   93000065                   STS     101,R16
   \   00000028   98DE                       CBI     0x1B,0x06
   \   0000002A   98DA                       CBI     0x1B,0x02
   \   0000002C   91000062                   LDS     R16,98
   \   00000030   7F0D                       ANDI    R16,0xFD
   \   00000032   93000062                   STS     98,R16
    225                if (!(ramb[0x18] & 0x01)||(ramb[0x1a]&1)) ch1_up =0;
   \   00000036   ....                       LDI     R30,LOW(ramb)
   \   00000038   ....                       LDI     R31,(ramb) >> 8
   \   0000003A   A920                       LDD     R18,Z+48
   \   0000003C   7021                       ANDI    R18,0x01
   \   0000003E   A904                       LDD     R16,Z+52
   \   00000040   7001                       ANDI    R16,0x01
   \   00000042   E011                       LDI     R17,1
   \   00000044   2710                       EOR     R17,R16
   \   00000046   2312                       AND     R17,R18
   \   00000048   F409                       BRNE    ??T1_comp_2
   \   0000004A   98DF                       CBI     0x1B,0x07
    226                if (!(ramb[0x18] & 0x02)||(ramb[0x1a]&2)) {ch2_up =0;}
   \                     ??T1_comp_2:
   \   0000004C   A900                       LDD     R16,Z+48
   \   0000004E   FF01                       SBRS    R16,1
   \   00000050   C002                       RJMP    ??T1_comp_3
   \   00000052   A904                       LDD     R16,Z+52
   \   00000054   FD01                       SBRC    R16,1
   \                     ??T1_comp_3:
   \   00000056   98DD                       CBI     0x1B,0x05
    227                if (!(ramb[0x18] & 0x04)||(ramb[0x1a]&4)) {ch3_up =0;}
   \                     ??T1_comp_4:
   \   00000058   A900                       LDD     R16,Z+48
   \   0000005A   FF02                       SBRS    R16,2
   \   0000005C   C002                       RJMP    ??T1_comp_5
   \   0000005E   A904                       LDD     R16,Z+52
   \   00000060   FD02                       SBRC    R16,2
   \                     ??T1_comp_5:
   \   00000062   98D9                       CBI     0x1B,0x01
    228                if (!(ramb[0x18] & 0x08)||(ramb[0x1a]&8)) ch4_up =0;
   \                     ??T1_comp_6:
   \   00000064   A900                       LDD     R16,Z+48
   \   00000066   FF03                       SBRS    R16,3
   \   00000068   C003                       RJMP    ??T1_comp_7
   \   0000006A   A904                       LDD     R16,Z+52
   \   0000006C   FF03                       SBRS    R16,3
   \   0000006E   C005                       RJMP    ??T1_comp_8
   \                     ??T1_comp_7:
   \   00000070   91000062                   LDS     R16,98
   \   00000074   7F0E                       ANDI    R16,0xFE
   \   00000076   93000062                   STS     98,R16
    229              
    230                flag = 3;
   \                     ??T1_comp_8:
   \   0000007A   E003                       LDI     R16,3
   \   0000007C   9300....                   STS     (count + 2),R16
    231          //      count=800 000/ chperiod ;
    232                count=20000; 
   \   00000080   E200                       LDI     R16,32
   \   00000082   E41E                       LDI     R17,78
   \   00000084   ....                       LDI     R30,LOW(count)
   \   00000086   ....                       LDI     R31,(count) >> 8
   \   00000088   8300                       ST      Z,R16
   \   0000008A   8311                       STD     Z+1,R17
    233          //      ramb[0x0d]=count;
    234                TCNT1=0;
   \   0000008C   E000                       LDI     R16,0
   \   0000008E   BD0D                       OUT     0x2D,R16
   \   00000090   BD0C                       OUT     0x2C,R16
    235                //      OCR1A=chperiod*15;
    236                OCR1A=600; //40мкс
   \   00000092   E508                       LDI     R16,88
   \   00000094   E012                       LDI     R17,2
   \   00000096   BD1B                       OUT     0x2B,R17
   \   00000098   BD0A                       OUT     0x2A,R16
    237                TCCR1B = (1<<CS10);// /1
   \   0000009A   E001                       LDI     R16,1
   \   0000009C   BD0E                       OUT     0x2E,R16
    238                f_presence = 0x0f;
   \   0000009E   E00F                       LDI     R16,15
   \   000000A0   9300....                   STS     f_presence,R16
    239                
    240                EIFR = (1<<INTF7) | (1<<INTF6) | (1<<INTF5) | (1<<INTF4);
   \   000000A4   EF00                       LDI     R16,240
   \   000000A6   BF08                       OUT     0x38,R16
    241                EIMSK |= (1<<INT7) | (1<<INT6) | (1<<INT5) | (1<<INT4);
   \   000000A8   B709                       IN      R16,0x39
   \   000000AA   6F00                       ORI     R16,0xF0
   \   000000AC   BF09                       OUT     0x39,R16
    242                
    243          //      addh(0x4400);
    244                return;
   \   000000AE   C02B                       RJMP    ??T1_comp_9
    245            }    
    246            if (flag==3){
   \                     ??T1_comp_1:
   \   000000B0   3003                       CPI     R16,3
   \   000000B2   F4A1                       BRNE    ??T1_comp_0
    247          //    ch1_up=1;ch2_up=1;ch3_up=1; ch4_up=1;   
    248          //      addh(0x4401);
    249          //      addh(count);
    250                count--;
   \   000000B4   ....                       LDI     R30,LOW(count)
   \   000000B6   ....                       LDI     R31,(count) >> 8
   \   000000B8   8100                       LD      R16,Z
   \   000000BA   8111                       LDD     R17,Z+1
   \   000000BC   5001                       SUBI    R16,1
   \   000000BE   4010                       SBCI    R17,0
   \   000000C0   8300                       ST      Z,R16
   \   000000C2   8311                       STD     Z+1,R17
    251          //      ramb[0x0c]=TCNT1;
    252          //    ramb[0x0e]=count;
    253                if (count==0){flag=0; return;} 
   \   000000C4   2B01                       OR      R16,R17
   \   000000C6   F419                       BRNE    ??T1_comp_10
   \   000000C8   E000                       LDI     R16,0
   \   000000CA   8302                       STD     Z+2,R16
   \   000000CC   C01C                       RJMP    ??T1_comp_9
    254                TCNT1=TCNT1-600;
   \                     ??T1_comp_10:
   \   000000CE   B50C                       IN      R16,0x2C
   \   000000D0   B51D                       IN      R17,0x2D
   \   000000D2   5508                       SUBI    R16,88
   \   000000D4   4012                       SBCI    R17,2
   \   000000D6   BD1D                       OUT     0x2D,R17
   \   000000D8   BD0C                       OUT     0x2C,R16
    255          /*      
    256              _NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();
    257               
    258                if (ch1_in == 0) f_presence &= ~0x01; // short circuit
    259                if (ch2_in == 0) f_presence &= ~ 0x02;
    260                if (ch3_in == 0) f_presence &= ~0x04;
    261                if (ch4_in == 0) f_presence &= ~0x08;
    262                
    263             
    264                if (!(ramb[0x18] & 0x01)) ch1_up =0;
    265                if (!(ramb[0x18] & 0x02)) {ch2_up =0;}
    266                if (!(ramb[0x18] & 0x04)) {ch3_up =0;}
    267                if (!(ramb[0x18] & 0x08)) ch4_up =0;
    268            */    
    269                return;
   \   000000DA   C015                       RJMP    ??T1_comp_9
    270                
    271             };
    272          //e_isr:    
    273            line1_up; line2_up; line3_up; line4_up;
   \                     ??T1_comp_0:
   \   000000DC   91000065                   LDS     R16,101
   \   000000E0   7F0B                       ANDI    R16,0xFB
   \   000000E2   93000065                   STS     101,R16
   \   000000E6   9ADF                       SBI     0x1B,0x07
   \   000000E8   98DE                       CBI     0x1B,0x06
   \   000000EA   9ADD                       SBI     0x1B,0x05
   \   000000EC   98DA                       CBI     0x1B,0x02
   \   000000EE   9AD9                       SBI     0x1B,0x01
   \   000000F0   91000062                   LDS     R16,98
   \   000000F4   7F0D                       ANDI    R16,0xFD
   \   000000F6   93000062                   STS     98,R16
   \   000000FA   6001                       ORI     R16,0x01
   \   000000FC   93000062                   STS     98,R16
    274            flag=0;
   \   00000100   E000                       LDI     R16,0
   \   00000102   9300....                   STS     (count + 2),R16
    275            return;
   \                     ??T1_comp_9:
   \   00000106   BF3F                       OUT     0x3F,R19
   \   00000108   9109                       LD      R16,Y+
   \   0000010A   9119                       LD      R17,Y+
   \   0000010C   9129                       LD      R18,Y+
   \   0000010E   9139                       LD      R19,Y+
   \   00000110   91E9                       LD      R30,Y+
   \   00000112   91F9                       LD      R31,Y+
   \   00000114   9518                       RETI
    276            
    277          }

   \                                 In segment INTVEC, offset 0x30, root
   \   00000000   ........                   JMP     T1_comp

   \                                 In segment ABSOLUTE, at 0x3b
   \   union <unnamed> volatile __io _A_PORTA
   \                     _A_PORTA:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x4a
   \   union <unnamed> volatile __io _A_OCR1A
   \                     _A_OCR1A:
   \   00000000                              DS 2

   \                                 In segment ABSOLUTE, at 0x4c
   \   union <unnamed> volatile __io _A_TCNT1
   \                     _A_TCNT1:
   \   00000000                              DS 2

   \                                 In segment ABSOLUTE, at 0x4e
   \   union <unnamed> volatile __io _A_TCCR1B
   \                     _A_TCCR1B:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x56
   \   union <unnamed> volatile __io _A_TIFR
   \                     _A_TIFR:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x57
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x58
   \   union <unnamed> volatile __io _A_EIFR
   \                     _A_EIFR:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x59
   \   union <unnamed> volatile __io _A_EIMSK
   \                     _A_EIMSK:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x62
   \   union <unnamed> volatile __io _A_PORTF
   \                     _A_PORTF:
   \   00000000                              DS 1

   \                                 In segment ABSOLUTE, at 0x65
   \   union <unnamed> volatile __io _A_PORTG
   \                     _A_PORTG:
   \   00000000                              DS 1

   Maximum stack usage in bytes:

     Function CSTACK RSTACK
     -------- ------ ------
     T1_comp      6      2
     delay_       0      4
     delay__      0      4


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     delay_          232
     delay__         246
     count             3
     T1_comp         278
     _A_PORTA          1
     _A_OCR1A          2
     _A_TCNT1          2
     _A_TCCR1B         1
     _A_TIFR           1
     _A_TIMSK          1
     _A_EIFR           1
     _A_EIMSK          1
     _A_PORTF          1
     _A_PORTG          1
      Others          11

 
  12 bytes in segment ABSOLUTE
 756 bytes in segment CODE
   7 bytes in segment INITTAB
   4 bytes in segment INTVEC
   3 bytes in segment NEAR_Z
 
 760 bytes of CODE memory (+  7 bytes shared)
   3 bytes of DATA memory (+ 12 bytes shared)

Errors: none
Warnings: none
