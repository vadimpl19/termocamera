##############################################################################
#                                                                            #
# IAR Atmel AVR C/EC++ Compiler V3.20C/W32             07/Aug/2006  16:02:21 #
# Copyright 1996-2004 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  D:\temp\sys_msap01mk_dev0103\OneWire\OW.c               #
#    Command line =  --cpu=m128 -ms -o D:\temp\sys_msap01mk_dev0103\Release\ #
#                    Obj\ -lCN D:\temp\sys_msap01mk_dev0103\Release\List\    #
#                    -y --initializers_in_flash -s9                          #
#                    -DENABLE_BIT_DEFINITIONS -e -I "F:\Program Files\IAR    #
#                    Systems\Embedded Workbench 3.2\avr\INC\" -I             #
#                    "F:\Program Files\IAR Systems\Embedded Workbench        #
#                    3.2\avr\INC\CLIB\" --eeprom_size 4096                   #
#                    D:\temp\sys_msap01mk_dev0103\OneWire\OW.c               #
#    List file    =  D:\temp\sys_msap01mk_dev0103\Release\List\OW.lst        #
#    Object file  =  D:\temp\sys_msap01mk_dev0103\Release\Obj\OW.r90         #
#                                                                            #
#                                                                            #
##############################################################################

D:\temp\sys_msap01mk_dev0103\OneWire\OW.c
      1          //#include "LED.h"
      2          #include "temp.h"
      3          #include "delay.h"
      4          #include <inavr.h>
      5          #include "..\types.h"
      6          #include "..\base.h"
      7          //#include "..\hist.h"
      8          #include "..\timeservice.h"
      9          #include "ow_crc.h"
     10          

   \                                 In segment NEAR_F, align 1, keep-with-next
     11          __flash unsigned char id_board[4][8] = 
   \                     id_board:
   \   00000000   C610D34E0800               DB 16, 198, 78, 211, 0, 8, 0, 98, 16, 179, 206, 199, 0, 8, 0, 236, 16
   \              6200B310C7CE
   \              0800EC0010  
   \   00000011   A8CB00C70008               DB 203, 168, 199, 0, 8, 0, 88, 16, 227, 169, 199, 0, 8, 0, 130
   \              1058A9E300C7
   \              000882      
     12              {
     13                0x10, 0xc6, 0x4e, 0xd3, 0x00, 0x08, 0x00, 0x62,
     14                0x10, 0xb3, 0xce, 0xc7, 0x00, 0x08, 0x00, 0xec,
     15                0x10, 0xcb, 0xa8, 0xc7, 0x00, 0x08, 0x00, 0x58,
     16                0x10, 0xe3, 0xa9, 0xc7, 0x00, 0x08, 0x00, 0x82
     17              };
     18          
     19          extern unsigned char flag;//флаг выполнения задержки
     20          //extern UINT count;

   \                                 In segment NEAR_Z, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_Z>`
     21          unsigned char f_read = 0;
   \                     f_read:
   \   00000000                              DS 1

   \                                 In segment CODE, align 2, keep-with-next
     22          void GetT(void)
   \                     GetT:
     23          {
     24            if (flag!=0) return;
   \   00000000   9100....                   LDS     R16,flag
   \   00000004   2300                       TST     R16
   \   00000006   F499                       BRNE    ??GetT_0
     25          //  if (count!=0) return;
     26            ramb[0x0a]=time;
   \   00000008   ....                       LDI     R30,LOW(time)
   \   0000000A   ....                       LDI     R31,(time) >> 8
   \   0000000C   8100                       LD      R16,Z
   \   0000000E   8111                       LDD     R17,Z+1
   \   00000010   ....                       LDI     R30,LOW(ramb)
   \   00000012   ....                       LDI     R31,(ramb) >> 8
   \   00000014   8B04                       STD     Z+20,R16
   \   00000016   8B15                       STD     Z+21,R17
     27          //  ramb[0x08]=count;  
     28          //  addh(0x4402);
     29             if (f_read) {read_meas();  return;};
   \   00000018   9100....                   LDS     R16,f_read
   \   0000001C   2300                       TST     R16
   \   0000001E   F011                       BREQ    ??GetT_1
   \   00000020   ........                   JMP     read_meas
     30            start_meas();
   \                     ??GetT_1:
   \   00000024   ........                   CALL    start_meas
     31            f_read =1;
   \   00000028   E001                       LDI     R16,1
   \   0000002A   9300....                   STS     f_read,R16
     32          }
   \                     ??GetT_0:
   \   0000002E   9508                       RET
     33          
     34          
     35          extern unsigned char dowcrc;
     36          char lineflags;
     37          /***************************************************
     38          биты 0...3 -подключен новый датчик
     39          биты 4...7 -подключено более одного нового датчика
     40          ***************************************************/
     41          
     42          

   \                                 In segment CODE, align 2, keep-with-next
     43          void config_uLan(void)
   \                     config_uLan:
     44          {
   \   00000000   92AA                       ST      -Y,R10
   \   00000002   929A                       ST      -Y,R9
   \   00000004   928A                       ST      -Y,R8
   \   00000006   927A                       ST      -Y,R7
   \   00000008   926A                       ST      -Y,R6
   \   0000000A   925A                       ST      -Y,R5
   \   0000000C   924A                       ST      -Y,R4
   \   0000000E   93BA                       ST      -Y,R27
   \   00000010   93AA                       ST      -Y,R26
   \   00000012   939A                       ST      -Y,R25
   \   00000014   938A                       ST      -Y,R24
   \   00000016                              REQUIRE ?Register_R4_is_cg_reg
   \   00000016                              REQUIRE ?Register_R5_is_cg_reg
   \   00000016                              REQUIRE ?Register_R6_is_cg_reg
   \   00000016                              REQUIRE ?Register_R7_is_cg_reg
   \   00000016                              REQUIRE ?Register_R8_is_cg_reg
   \   00000016                              REQUIRE ?Register_R9_is_cg_reg
   \   00000016                              REQUIRE ?Register_R10_is_cg_reg
   \   00000016   9728                       SBIW    R29 : R28,8
     45          
     46            static unsigned char ul_flag = 0x80, id_[8], tmp1 =0, line_mask = 1;
     47            unsigned char id[8], i;
     48            unsigned int adr, adr_, tmp;
     49           if(lineflags&0xf0){//ошибка. Было подключено более одного датчика. Выходим
   \   00000018   ....                       LDI     R26,LOW(lineflags)
   \   0000001A   ....                       LDI     R27,(lineflags) >> 8
   \   0000001C   910C                       LD      R16,X
   \   0000001E   7F00                       ANDI    R16,0xF0
   \   00000020   F009                       BREQ    $+2+2
   \   00000022   C086                       RJMP    ??config_uLan_0
     50           return;
     51           }   
     52          //  line_mask = 2;//**********************
     53            ul_flag =(ul_flag&0xf0) + line_mask;//добавляем маску линии
   \   00000024   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000026   8101                       LDD     R16,Z+1
   \   00000028   7F00                       ANDI    R16,0xF0
   \   0000002A   8113                       LDD     R17,Z+3
   \   0000002C   0F10                       ADD     R17,R16
   \   0000002E   8311                       STD     Z+1,R17
     54            search(&ul_flag, id);
   \   00000030   019E                       MOVW    R19 : R18,R29 : R28
   \   00000032   018D                       MOVW    R17 : R16,R27 : R26
   \   00000034   5F0F                       SUBI    R16,255
   \   00000036   4F1F                       SBCI    R17,255
   \   00000038   ........                   CALL    search
     55            
     56            if (ul_flag&0x70)//ошибка CRC, шины или нет датчиков
   \   0000003C   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000003E   8101                       LDD     R16,Z+1
   \   00000040   7700                       ANDI    R16,0x70
   \   00000042   F069                       BREQ    ??config_uLan_1
     57              {
     58                ul_flag = 0x80;
   \   00000044   E800                       LDI     R16,128
   \   00000046   8301                       STD     Z+1,R16
     59                tmp1=0;
   \   00000048   E000                       LDI     R16,0
   \   0000004A   8302                       STD     Z+2,R16
     60                line_mask <<= 1;
   \                     ??config_uLan_2:
   \   0000004C   8103                       LDD     R16,Z+3
   \   0000004E   0F00                       LSL     R16
   \   00000050   8303                       STD     Z+3,R16
     61                if (line_mask > 0x08) line_mask = 1;
   \   00000052   3009                       CPI     R16,9
   \   00000054   F408                       BRCC    $+2+2
   \   00000056   C06C                       RJMP    ??config_uLan_0
   \   00000058   E001                       LDI     R16,1
   \   0000005A   8303                       STD     Z+3,R16
   \   0000005C   C069                       RJMP    ??config_uLan_0
     62                return;
     63              }
     64          
     65            
     66            adr = search_free(line_mask);//ищем свободную ячейку, если их нет, то 0
   \                     ??config_uLan_1:
   \   0000005E   8103                       LDD     R16,Z+3
   \   00000060   ........                   CALL    search_free
   \   00000064   01C8                       MOVW    R25 : R24,R17 : R16
     67            if (adr==0)
   \   00000066   2B01                       OR      R16,R17
   \   00000068   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000006A   F381                       BREQ    ??config_uLan_2
     68              {
     69                line_mask <<= 1;
     70                if (line_mask > 0x08) line_mask = 1;
     71                return;  
     72              }
     73            
     74            if (ul_flag & 0x80)
   \   0000006C   8101                       LDD     R16,Z+1
   \   0000006E   FF07                       SBRS    R16,7
   \   00000070   C033                       RJMP    ??config_uLan_3
     75              {
     76                if (tmp1 > 1)//подключено одновременно больше 1 датчика
   \   00000072   8102                       LDD     R16,Z+2
   \   00000074   3002                       CPI     R16,2
   \   00000076   F038                       BRCS    ??config_uLan_4
     77                  {
     78                    lineflags |= (line_mask <<4);
   \   00000078   8103                       LDD     R16,Z+3
   \   0000007A   9502                       SWAP    R16
   \   0000007C   7F00                       ANDI    R16,0xF0
   \   0000007E   911C                       LD      R17,X
   \   00000080   2B10                       OR      R17,R16
   \   00000082   931C                       ST      X,R17
   \   00000084   C01F                       RJMP    ??config_uLan_5
     79                  }
     80                  else if (tmp1 == 1)//иначе записываем ID в базу
   \                     ??config_uLan_4:
   \   00000086   3001                       CPI     R16,1
   \   00000088   F4E9                       BRNE    ??config_uLan_5
     81                  {
     82          //          addh(0x5557);
     83          //          addh(adr);
     84                    lineflags |= line_mask & 0x0f;
   \   0000008A   8103                       LDD     R16,Z+3
   \   0000008C   700F                       ANDI    R16,0x0F
   \   0000008E   911C                       LD      R17,X
   \   00000090   2B10                       OR      R17,R16
   \   00000092   931C                       ST      X,R17
     85                    for (i = 0; i < 4; i ++)
   \   00000094   013C                       MOVW    R7 : R6,R25 : R24
   \   00000096   014D                       MOVW    R9 : R8,R27 : R26
   \   00000098   E004                       LDI     R16,4
   \   0000009A   0E80                       ADD     R8,R16
   \   0000009C   E000                       LDI     R16,0
   \   0000009E   1E90                       ADC     R9,R16
   \   000000A0   E004                       LDI     R16,4
   \   000000A2   2EA0                       MOV     R10,R16
     86                      {
     87                         tmp = (unsigned int) id_[1 +2*i] <<8 | id_[2*i];
     88          //              hrem[adr + i] = tmp;
     89                        setrg(adr + i, tmp);
   \                     ??config_uLan_6:
   \   000000A4   01F4                       MOVW    R31 : R30,R9 : R8
   \   000000A6   8131                       LDD     R19,Z+1
   \   000000A8   8120                       LD      R18,Z
   \   000000AA   0183                       MOVW    R17 : R16,R7 : R6
   \   000000AC   ........                   CALL    setrg
     90          
     91                      }
   \   000000B0   E002                       LDI     R16,2
   \   000000B2   0E80                       ADD     R8,R16
   \   000000B4   E000                       LDI     R16,0
   \   000000B6   1E90                       ADC     R9,R16
   \   000000B8   E001                       LDI     R16,1
   \   000000BA   0E60                       ADD     R6,R16
   \   000000BC   E000                       LDI     R16,0
   \   000000BE   1E70                       ADC     R7,R16
   \   000000C0   94AA                       DEC     R10
   \   000000C2   F781                       BRNE    ??config_uLan_6
     92                  }
     93                tmp1 = 0;
   \                     ??config_uLan_5:
   \   000000C4   E000                       LDI     R16,0
   \   000000C6   01FD                       MOVW    R31 : R30,R27 : R26
   \   000000C8   8302                       STD     Z+2,R16
     94                /**** переключаем шлейф ****/
     95                line_mask <<= 1;
   \   000000CA   8103                       LDD     R16,Z+3
   \   000000CC   0F00                       LSL     R16
   \   000000CE   8303                       STD     Z+3,R16
     96                if (line_mask > 0x08) line_mask = 1;
   \   000000D0   3009                       CPI     R16,9
   \   000000D2   F010                       BRCS    ??config_uLan_3
   \   000000D4   E001                       LDI     R16,1
   \   000000D6   8303                       STD     Z+3,R16
     97              }
     98            
     99            switch (line_mask)
   \                     ??config_uLan_3:
   \   000000D8   8103                       LDD     R16,Z+3
   \   000000DA   950A                       DEC     R16
   \   000000DC   F039                       BREQ    ??config_uLan_7
   \   000000DE   950A                       DEC     R16
   \   000000E0   F049                       BREQ    ??config_uLan_8
   \   000000E2   5002                       SUBI    R16,2
   \   000000E4   F051                       BREQ    ??config_uLan_9
   \   000000E6   5004                       SUBI    R16,4
   \   000000E8   F059                       BREQ    ??config_uLan_10
   \   000000EA   C00D                       RJMP    ??config_uLan_11
    100              {
    101                case 1 : adr_ = 0x17c; break;
   \                     ??config_uLan_7:
   \   000000EC   E70C                       LDI     R16,124
   \   000000EE   2E40                       MOV     R4,R16
   \   000000F0   E001                       LDI     R16,1
   \   000000F2   C008                       RJMP    ??config_uLan_12
    102                case 2 : adr_ = 0x200; break;
   \                     ??config_uLan_8:
   \   000000F4   2444                       CLR     R4
   \                     ??config_uLan_13:
   \   000000F6   E002                       LDI     R16,2
   \   000000F8   C005                       RJMP    ??config_uLan_12
    103                case 4 : adr_ = 0x280; break;
   \                     ??config_uLan_9:
   \   000000FA   E800                       LDI     R16,128
   \   000000FC   2E40                       MOV     R4,R16
   \   000000FE   CFFB                       RJMP    ??config_uLan_13
    104                case 8 : adr_ = 0x300; break;
   \                     ??config_uLan_10:
   \   00000100   2444                       CLR     R4
   \   00000102   E003                       LDI     R16,3
   \                     ??config_uLan_12:
   \   00000104   2E50                       MOV     R5,R16
    105              }
    106          
    107            if (!(ul_flag & 0x80))
   \                     ??config_uLan_11:
   \   00000106   8101                       LDD     R16,Z+1
   \   00000108   FD07                       SBRC    R16,7
   \   0000010A   C012                       RJMP    ??config_uLan_0
    108            {
    109              if ( comp(id, adr_, adr) )//если датчика нет в базе
   \   0000010C   01AC                       MOVW    R21 : R20,R25 : R24
   \   0000010E   0192                       MOVW    R19 : R18,R5 : R4
   \   00000110   018E                       MOVW    R17 : R16,R29 : R28
   \   00000112   ........                   CALL    comp
   \   00000116   2300                       TST     R16
   \   00000118   F059                       BREQ    ??config_uLan_0
    110                {
    111          //      hrem[0x17C] = comp(id, adr_, adr);
    112          //      addh(0x5559);      addh(adr_);addh(adr);
    113          //      addh(( (int)id[0])<<8+id[1]);
    114          //      addh(((int)id[2])<<8+id[3]);
    115                //hrem[0x17D]++;
    116                  tmp1 ++;
   \   0000011A   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000011C   8102                       LDD     R16,Z+2
   \   0000011E   9503                       INC     R16
   \   00000120   8302                       STD     Z+2,R16
    117                  for (i = 0; i < 8; i ++)
   \   00000122   9614                       ADIW    R27 : R26,4
   \   00000124   01FE                       MOVW    R31 : R30,R29 : R28
   \   00000126   E008                       LDI     R16,8
    118                    {
    119                      id_[i] = id[i];
   \                     ??config_uLan_14:
   \   00000128   9111                       LD      R17,Z+
   \   0000012A   931D                       ST      X+,R17
    120                    }
   \   0000012C   950A                       DEC     R16
   \   0000012E   F7E1                       BRNE    ??config_uLan_14
   \                     ??config_uLan_0:
   \   00000130   9628                       ADIW    R29 : R28,8
   \   00000132   9189                       LD      R24,Y+
   \   00000134   9199                       LD      R25,Y+
   \   00000136   91A9                       LD      R26,Y+
   \   00000138   91B9                       LD      R27,Y+
   \   0000013A   9049                       LD      R4,Y+
   \   0000013C   9059                       LD      R5,Y+
   \   0000013E   9069                       LD      R6,Y+
   \   00000140   9079                       LD      R7,Y+
   \   00000142   9089                       LD      R8,Y+
   \   00000144   9099                       LD      R9,Y+
   \   00000146   90A9                       LD      R10,Y+
   \   00000148   9508                       RET
    121                }
    122            }
    123          }

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \                     lineflags:
   \   00000000                              DS 1
   \   00000001                              REQUIRE `?<Initializer for lineflags>`
   \   00000001                              DS 1
   \   00000002                              REQUIRE `?<Initializer for ul_flag>`
   \   00000002                              DS 1
   \   00000003                              REQUIRE `?<Initializer for tmp1>`
   \   00000003                              DS 1
   \   00000004                              REQUIRE `?<Initializer for line_mask>`
   \   00000004                              DS 8
   \   0000000C                              REQUIRE `?<Initializer for id_>`
    124          /**************************************************************************************
    125          функция определения ID внутреннего датчика температуры устройства 
    126          возвращает 
    127          0 - все нормально, ID добавлен в базу
    128          1 - датчик не найден
    129          2- больше одного датчика на шлейфе
    130          3- ошибка работы со шлейфом
    131          **************************************************************************************/

   \                                 In segment CODE, align 2, keep-with-next
    132          char get_temp_id(void)
   \                     get_temp_id:
    133          {
   \   00000000   93BA                       ST      -Y,R27
   \   00000002   93AA                       ST      -Y,R26
   \   00000004   9728                       SBIW    R29 : R28,8
    134          
    135            static unsigned char ul_flag = 0x80, id_[8];//, tmp1 =0;
    136            unsigned char id[8], line_mask, i;
    137            //unsigned int adr, adr_, tmp;
    138            
    139            line_mask = 1;//**********************
    140            ul_flag |= line_mask;//добавляем маску линии
   \   00000006   ....                       LDI     R26,LOW(??id__1)
   \   00000008   ....                       LDI     R27,(??id__1) >> 8
   \   0000000A   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000000C   8500                       LDD     R16,Z+8
   \   0000000E   6001                       ORI     R16,0x01
   \   00000010   8700                       STD     Z+8,R16
    141            search(&ul_flag, id);
   \   00000012   019E                       MOVW    R19 : R18,R29 : R28
   \   00000014   018D                       MOVW    R17 : R16,R27 : R26
   \   00000016   5F08                       SUBI    R16,248
   \   00000018   4F1F                       SBCI    R17,255
   \   0000001A   ........                   CALL    search
    142            if (ul_flag &0x70) return 3;
   \   0000001E   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000020   8500                       LDD     R16,Z+8
   \   00000022   7700                       ANDI    R16,0x70
   \   00000024   F011                       BREQ    ??get_temp_id_0
   \                     ??get_temp_id_1:
   \   00000026   E003                       LDI     R16,3
   \   00000028   C03C                       RJMP    ??get_temp_id_2
    143                  for (i = 0; i < 8; i ++)
   \                     ??get_temp_id_0:
   \   0000002A   019D                       MOVW    R19 : R18,R27 : R26
   \   0000002C   018E                       MOVW    R17 : R16,R29 : R28
   \   0000002E   E048                       LDI     R20,8
    144                  {
    145                    id_[i] = id[i];
   \                     ??get_temp_id_3:
   \   00000030   01F8                       MOVW    R31 : R30,R17 : R16
   \   00000032   9151                       LD      R21,Z+
   \   00000034   018F                       MOVW    R17 : R16,R31 : R30
   \   00000036   01F9                       MOVW    R31 : R30,R19 : R18
   \   00000038   9351                       ST      Z+,R21
   \   0000003A   019F                       MOVW    R19 : R18,R31 : R30
    146                  }
   \   0000003C   954A                       DEC     R20
   \   0000003E   F7C1                       BRNE    ??get_temp_id_3
    147          
    148            if (ul_flag & 0x80) return 1;
   \   00000040   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000042   8500                       LDD     R16,Z+8
   \   00000044   FF07                       SBRS    R16,7
   \   00000046   C002                       RJMP    ??get_temp_id_4
   \   00000048   E001                       LDI     R16,1
   \   0000004A   C02B                       RJMP    ??get_temp_id_2
    149            search(&ul_flag, id);
   \                     ??get_temp_id_4:
   \   0000004C   019E                       MOVW    R19 : R18,R29 : R28
   \   0000004E   018D                       MOVW    R17 : R16,R27 : R26
   \   00000050   5F08                       SUBI    R16,248
   \   00000052   4F1F                       SBCI    R17,255
   \   00000054   ........                   CALL    search
    150            if (ul_flag &0x70) return 3;
   \   00000058   01FD                       MOVW    R31 : R30,R27 : R26
   \   0000005A   8500                       LDD     R16,Z+8
   \   0000005C   7700                       ANDI    R16,0x70
   \   0000005E   F719                       BRNE    ??get_temp_id_1
    151            if (!(ul_flag & 0x80)) {return 2;}
   \   00000060   8500                       LDD     R16,Z+8
   \   00000062   FD07                       SBRC    R16,7
   \   00000064   C002                       RJMP    ??get_temp_id_5
   \   00000066   E002                       LDI     R16,2
   \   00000068   C01C                       RJMP    ??get_temp_id_2
    152            setrg(0x170, id_[0]+((int)id_[1]<<8));
   \                     ??get_temp_id_5:
   \   0000006A   912C                       LD      R18,X
   \   0000006C   8131                       LDD     R19,Z+1
   \   0000006E   E700                       LDI     R16,112
   \   00000070   E011                       LDI     R17,1
   \   00000072   ........                   CALL    setrg
    153            setrg(0x171, id_[2]+((int)id_[3]<<8));
   \   00000076   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000078   8122                       LDD     R18,Z+2
   \   0000007A   8133                       LDD     R19,Z+3
   \   0000007C   E701                       LDI     R16,113
   \   0000007E   E011                       LDI     R17,1
   \   00000080   ........                   CALL    setrg
    154            setrg(0x172, id_[4]+((int)id_[5]<<8));
   \   00000084   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000086   8124                       LDD     R18,Z+4
   \   00000088   8135                       LDD     R19,Z+5
   \   0000008A   E702                       LDI     R16,114
   \   0000008C   E011                       LDI     R17,1
   \   0000008E   ........                   CALL    setrg
    155            setrg(0x173, id_[6]+((int)id_[7]<<8));
   \   00000092   01FD                       MOVW    R31 : R30,R27 : R26
   \   00000094   8126                       LDD     R18,Z+6
   \   00000096   8137                       LDD     R19,Z+7
   \   00000098   E703                       LDI     R16,115
   \   0000009A   E011                       LDI     R17,1
   \   0000009C   ........                   CALL    setrg
    156            return 0;
   \   000000A0   E000                       LDI     R16,0
   \                     ??get_temp_id_2:
   \   000000A2   9628                       ADIW    R29 : R28,8
   \   000000A4   91A9                       LD      R26,Y+
   \   000000A6   91B9                       LD      R27,Y+
   \   000000A8   9508                       RET
    157          }

   \                                 In segment NEAR_I, align 1, keep-with-next
   \   00000000                              REQUIRE `?<Segment init: NEAR_I>`
   \                     ??id__1:
   \   00000000                              DS 8
   \   00000008                              REQUIRE `?<Initializer for id_>_1`
   \   00000008                              DS 1
   \   00000009                              REQUIRE `?<Initializer for ul_flag>_1`

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for lineflags>`:
   \   00000000   00                         DB 0
   \                     `?<Initializer for ul_flag>`:
   \   00000001   80                         DB 128
   \                     `?<Initializer for tmp1>`:
   \   00000002   00                         DB 0
   \                     `?<Initializer for line_mask>`:
   \   00000003   01                         DB 1
   \                     `?<Initializer for id_>`:
   \   00000004   000000000000               DB 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for id_>_1`:
   \   00000000   000000000000               DB 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for ul_flag>_1`:
   \   00000008   80                         DB 128
    158          

   Maximum stack usage in bytes:

     Function         CSTACK RSTACK
     --------         ------ ------
     GetT                 0      2
       -> read_meas       0      2
       -> start_meas      0      2
     config_uLan         19      2
       -> search         19      2
       -> search_free    19      2
       -> setrg          19      2
       -> comp           19      2
     get_temp_id         10      2
       -> search         10      2
       -> search         10      2
       -> setrg          10      2
       -> setrg          10      2
       -> setrg          10      2
       -> setrg          10      2


   Segment part sizes:

     Function/Label               Bytes
     --------------               -----
     id_board                       32
     f_read                          1
     GetT                           48
     config_uLan                   330
     lineflags                      12
     get_temp_id                   170
     id_                             9
     ?<Initializer for lineflags>   12
     ?<Initializer for id_>_1        9
      Others                        14

 
 548 bytes in segment CODE
  14 bytes in segment INITTAB
  32 bytes in segment NEAR_F
  21 bytes in segment NEAR_I
  21 bytes in segment NEAR_ID
   1 byte  in segment NEAR_Z
 
 601 bytes of CODE memory (+ 14 bytes shared)
  22 bytes of DATA memory

Errors: none
Warnings: none
